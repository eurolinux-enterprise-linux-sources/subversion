
https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2014-3580

http://subversion.apache.org/security/CVE-2014-3580-advisory.txt

http://svn.apache.org/r1643409

plus addition of dav_svn__new_error().

--- subversion-1.6.11/subversion/mod_dav_svn/dav_svn.h.cve3580
+++ subversion-1.6.11/subversion/mod_dav_svn/dav_svn.h
@@ -609,6 +609,21 @@ dav_svn__authz_read_func(dav_svn__authz_
 
 
 /*** util.c ***/
+/* A wrapper around mod_dav's dav_new_error, mod_dav_svn uses this
+   instead of the mod_dav function to enable special mod_dav_svn specific
+   processing.  See dav_new_error for parameter documentation.
+   Note that DESC may be null (it's hard to track this down from
+   dav_new_error()'s documentation, but see the dav_error type,
+   which says that its desc field may be NULL).
+
+   If ERROR_ID is 0, SVN_ERR_RA_DAV_REQUEST_FAILED will be used as a
+   default value for the error code.
+*/
+dav_error *
+dav_svn__new_error(apr_pool_t *pool,
+                   int status,
+                   int error_id,
+                   const char *desc);
 
 /* A wrapper around mod_dav's dav_new_error_tag, mod_dav_svn uses this
    instead of the mod_dav function to enable special mod_dav_svn specific
--- subversion-1.6.11/subversion/mod_dav_svn/reports/deleted-rev.c.cve3580
+++ subversion-1.6.11/subversion/mod_dav_svn/reports/deleted-rev.c
@@ -47,6 +47,9 @@ dav_svn__get_deleted_rev_report(const da
   dav_error *derr = NULL;
 
   /* Sanity check. */
+  if (!resource->info->repos_path)
+    return dav_svn__new_error(resource->pool, HTTP_BAD_REQUEST, 0,
+                              "The request does not specify a repository path");
   ns = dav_svn__find_ns(doc->namespaces, SVN_XML_NAMESPACE);
   if (ns == -1)
     return dav_svn__new_error_tag(resource->pool, HTTP_BAD_REQUEST, 0,
--- subversion-1.6.11/subversion/mod_dav_svn/reports/file-revs.c.cve3580
+++ subversion-1.6.11/subversion/mod_dav_svn/reports/file-revs.c
@@ -240,6 +240,9 @@ dav_svn__file_revs_report(const dav_reso
   arb.repos = resource->info->repos;
 
   /* Sanity check. */
+  if (!resource->info->repos_path)
+    return dav_svn__new_error(resource->pool, HTTP_BAD_REQUEST, 0,
+                              "The request does not specify a repository path");
   ns = dav_svn__find_ns(doc->namespaces, SVN_XML_NAMESPACE);
   /* ### This is done on other places, but the document element is
      in this namespace, so is this necessary at all? */
--- subversion-1.6.11/subversion/mod_dav_svn/reports/get-locations.c.cve3580
+++ subversion-1.6.11/subversion/mod_dav_svn/reports/get-locations.c
@@ -99,6 +99,9 @@ dav_svn__get_locations_report(const dav_
                                       sizeof(svn_revnum_t));
 
   /* Sanity check. */
+  if (!resource->info->repos_path)
+    return dav_svn__new_error(resource->pool, HTTP_BAD_REQUEST, 0,
+                              "The request does not specify a repository path");
   ns = dav_svn__find_ns(doc->namespaces, SVN_XML_NAMESPACE);
   if (ns == -1)
     {
--- subversion-1.6.11/subversion/mod_dav_svn/reports/get-location-segments.c.cve3580
+++ subversion-1.6.11/subversion/mod_dav_svn/reports/get-location-segments.c
@@ -115,6 +115,9 @@ dav_svn__get_location_segments_report(co
   struct location_segment_baton location_segment_baton;
 
   /* Sanity check. */
+  if (!resource->info->repos_path)
+    return dav_svn__new_error(resource->pool, HTTP_BAD_REQUEST, 0,
+                              "The request does not specify a repository path");
   ns = dav_svn__find_ns(doc->namespaces, SVN_XML_NAMESPACE);
   if (ns == -1)
     {
--- subversion-1.6.11/subversion/mod_dav_svn/reports/log.c.cve3580
+++ subversion-1.6.11/subversion/mod_dav_svn/reports/log.c
@@ -296,6 +296,9 @@ dav_svn__log_report(const dav_resource *
     = apr_array_make(resource->pool, 1, sizeof(const char *));
 
   /* Sanity check. */
+  if (!resource->info->repos_path)
+    return dav_svn__new_error(resource->pool, HTTP_BAD_REQUEST, 0,
+                              "The request does not specify a repository path");
   ns = dav_svn__find_ns(doc->namespaces, SVN_XML_NAMESPACE);
   if (ns == -1)
     {
--- subversion-1.6.11/subversion/mod_dav_svn/reports/mergeinfo.c.cve3580
+++ subversion-1.6.11/subversion/mod_dav_svn/reports/mergeinfo.c
@@ -61,6 +61,9 @@ dav_svn__get_mergeinfo_report(const dav_
     = apr_array_make(resource->pool, 0, sizeof(const char *));
 
   /* Sanity check. */
+  if (!resource->info->repos_path)
+    return dav_svn__new_error(resource->pool, HTTP_BAD_REQUEST, 0,
+                              "The request does not specify a repository path");
   ns = dav_svn__find_ns(doc->namespaces, SVN_XML_NAMESPACE);
   if (ns == -1)
     {
--- subversion-1.6.11/subversion/mod_dav_svn/util.c.cve3580
+++ subversion-1.6.11/subversion/mod_dav_svn/util.c
@@ -30,6 +30,31 @@
 
 #include "dav_svn.h"
 
+dav_error *
+dav_svn__new_error(apr_pool_t *pool,
+                   int status,
+                   int error_id,
+                   const char *desc)
+{
+  if (error_id == 0)
+    error_id = SVN_ERR_RA_DAV_REQUEST_FAILED;
+
+/*
+ * Note: dav_new_error() in httpd 2.0/2.2 always treated
+ * the errno field in dav_error as an apr_status_t when
+ * logging; on some platforms errno and apr_status_t
+ * aren't directly interchangeable.  The code for httpd
+ * > 2.2 below perpetuates this.
+ */
+#if AP_MODULE_MAGIC_AT_LEAST(20091119,0)
+  return dav_new_error(pool, status, error_id, 0, desc);
+#else
+
+  errno = 0; /* For the same reason as in dav_svn__new_error_svn */
+
+  return dav_new_error(pool, status, error_id, desc);
+#endif
+}
 
 dav_error *
 dav_svn__new_error_tag(apr_pool_t *pool,
